var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}, {'title': 'Week1~9', 'text': '第二周為建立個人倉儲 \n 1.進入老師網站下載2019fall \n 2.進入github建立新倉儲 \n 3.接著把倉儲的網址clone至隨身碟中 \n 4.把老師的倉儲git submodule至cad2019資料夾中的cmsimde \n 5.接著輸入python wsgi.py即可開啟進端來修改網頁 \n 6.修改好後按下save並轉成靜態網站 \n 7.使用git status git add . git commit git push 來將更新完的資料推上github \n 下連結為操作影片: https://youtu.be/zWk2l1IycY8 \n \n 第三周為編譯solvespace \n 1.至老師的首頁並將游標移至TASK接著點選SOLIVESPACE編譯 \n 2.進入solviespace編譯後裡面就有清楚交代每個步驟來進行編譯 \n 3.跟著步驟做完後再將老師給的.dall補釘包下載下來複製貼上到cad2019中來補齊缺失的檔案 \n 下連結為操作影片: https://youtu.be/KsRULmWi-Os \n \n 第五周為操作solvespace \n 基本上就是跟著影片裡的人一起操作 \n 裡面也有解說基本的快捷鍵以及限制條件的方法 \n 下連結為操作影片: https://youtu.be/ZvZRASkGty8 \n \n 架設blog \n \n 下連結為建立BLOG的範例影片 https://youtu.be/L9YAYsLsORM \n \n', 'tags': '', 'url': 'Week1~9.html'}]};