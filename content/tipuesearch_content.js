var tipuesearch = {"pages": [{'title': 'Week', 'text': 'Week2~5 \n Week6~9 \n Week10~14 \n Week15~18', 'tags': '', 'url': 'Week.html'}, {'title': 'Week2~5', 'text': '第二周為建立個人倉儲 \n 1.進入老師網站下載2019fall \n 2.進入github建立新倉儲 \n 3.接著把倉儲的網址clone至隨身碟中 \n 4.把老師的倉儲git submodule至cad2019資料夾中的cmsimde \n 5.接著輸入python wsgi.py即可開啟進端來修改網頁 \n 6.修改好後按下save並轉成靜態網站 \n 7.使用git status git add . git commit git push 來將更新完的資料推上github \n 下連結為操作影片: https://youtu.be/zWk2l1IycY8 \n \n 第三周為編譯solvespace \n 1.至老師的首頁並將游標移至TASK接著點選SOLIVESPACE編譯 \n 2.進入solviespace編譯後裡面就有清楚交代每個步驟來進行編譯 \n 3.跟著步驟做完後再將老師給的.dall補釘包下載下來複製貼上到cad2019中來補齊缺失的檔案 \n 下連結為操作影片: https://youtu.be/KsRULmWi-Os \n \n 第五周為操作solvespace \n 基本上就是跟著影片裡的人一起操作 \n 裡面也有解說基本的快捷鍵以及限制條件的方法 \n 下連結為操作影片: https://youtu.be/ZvZRASkGty8 \n', 'tags': '', 'url': 'Week2~5.html'}, {'title': 'Week6~9', 'text': '架設blog \n \n 下連結為建立BLOG的範例影片 https://youtu.be/L9YAYsLsORM \n \n', 'tags': '', 'url': 'Week6~9.html'}, {'title': 'Week10~14', 'text': '第10週:Fork倉儲 \n 1.登入自己的github，並且搜尋自己小組的分組倉儲 \n 2.點選右上角的fork，再點選自己的倉儲 \n 3.輸入指令 git clone --recurse-submodules (小組的倉儲網址) \n 4.等待下載完成即可 \n 下連結為操作影片:https://youtu.be/kULMk6BK79Q \n \n 第11週: 組員個別整理電子書內容 \n 此為NX12參考連結: http://mde.tw/cad2019/downloads/NX-12-for-Engineering-Design.pdf \n 第三章:二維草圖 \n 本章為教學如何在NX12中新建和編輯草圖， 我們可以在建模型的應用功能新建草圖平面， 通常建立模型都是從2D草圖開始的然後再用伸長、旋轉或掃出來建立實體，有複雜的形狀導致難以簡單的拉伸， 後面會有一些範例來示範如何運用草圖來長出工件。 \n 3.1概念 一個nx12的草圖是將曲線編入後掃出，形成一個固體， 我們可以使用應用約束和幾何約束以完全約束草圖，繪製完成後，可以使用多種方法來生成3D零件 \n • 使用旋轉來長出 \n   \n • 使用伸長來長出 \n \n • 使用掃出來長出 \n \n 從草圖創建的特徵和尺寸， 如果草圖更改，特徵也會更改。 以下是使用草圖創建的優點: \n •用於創建輪廓的曲線是非常靈活的，可用於建模\n不尋常的形狀。\n•曲線是參數化的，因此具有關聯性，可以輕鬆更改或刪除它們。\n•如果更改了繪製草圖的平面，則草圖將被更改。\n•當你想要控制特徵的輪廓時，只要進入草圖裡面做更改後， 其特徵皂性也能立即做出更改。 \n 3.2草圖環境 \n 在NX 12中，可以使用兩種方法創建草圖。 第一種方法是在當前環境 \n 以下做示範:➢ 選擇目錄→插入→草圖 \n \n 也可以使用另一種方法 \n ➢在主工具欄中選擇草圖 \n 無論哪種方式來建立，都會彈出一個視窗來詢問\n定義草圖平面。畫面會顯示草圖選項。可以選擇草圖平面， 草圖繪製方向和類型草圖的平面。 使用“創建草圖”視窗創建草圖時，可以選擇\n通過點擊所示的坐標系可以在其上創建草圖的平面。 這個將突出顯示你選擇的平面。 例子: \n ➢選擇XC-YC平面並點擊確定 \n 將顯示草圖平面，並標記X-Y方向。 \n 主畫面將更改為“草繪環境”。 XY平面突出顯示為\n用於草繪的默認平面。這是基本的草圖窗口。還有一個特殊的草繪任務用在\nNX 12中的環境，它在主窗口中顯示所有草圖工具。 用於草繪任務的環境。 \n \xa0 \n', 'tags': '', 'url': 'Week10~14.html'}, {'title': 'Week15~18', 'text': '\n', 'tags': '', 'url': 'Week15~18.html'}, {'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}]};